import { defineFlatConfig } from "eslint-define-config";
import eslintConfigPrettier from "eslint-config-prettier";
import vue from "eslint-plugin-vue";
import vueParser from "vue-eslint-parser";
import js from "@eslint/js";
import tsParser from "@typescript-eslint/parser";
import tsEslint from "@typescript-eslint/eslint-plugin";
import arrayFuncPlugin from "eslint-plugin-array-func";
import eslintCommentsPlugin from "eslint-plugin-eslint-comments";
import importPlugin from "eslint-plugin-import";
import perfectionistPlugin from "eslint-plugin-perfectionist";
import unicornPlugin from "eslint-plugin-unicorn";
import promisePlugin from "eslint-plugin-promise";
import noSecretsPlugin from "eslint-plugin-no-secrets";
import regexpPlugin from "eslint-plugin-regexp";
import writeGoodCommentsPlugin from "eslint-plugin-write-good-comments";
import onlyWarnPlugin from "eslint-plugin-only-warn";

export default defineFlatConfig([
  // global ignores
  {
    ignores: [
      "node_modules",
      "coverage",
      ".nyc_output",
      "dist",
      ".nuxt",
      ".output",
      "pnpm-lock.yaml",
    ],
  },
  // override default eslint rules
  {
    ...js.configs.recommended,
    rules: {
      "arrow-body-style": ["warn", "as-needed"],
      "class-methods-use-this": "off",
      "dot-notation": "off",
      "max-params": "off",
      "no-loop-func": "off",
      "no-loss-of-precision": "off",
      "no-magic-numbers": "off",
      "no-unused-vars": "off",
    },
  },
  // nuxt config eslint
  {
    files: ["*.ts", "*.tsx", "*.mts", "*.cts", "*.vue"],
    rules: {
      // The core 'no-unused-vars' rules (in the eslint:recommended ruleset)
      "@typescript-eslint/no-unused-vars": "warn",
      // does not work with type definitions.
      "no-unused-vars": "off",
    },
  },
  {
    // Include typescript eslint rules in *.vue files
    // https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/src/configs/eslint-recommended.ts
    files: ["*.vue"],
    rules: {
      "constructor-super": "off", // ts(2335) & ts(2377)
      "getter-return": "off", // ts(2378)
      "no-const-assign": "off", // ts(2588)
      "no-dupe-args": "off", // ts(2300)
      "no-dupe-class-members": "off", // ts(2393) & ts(2300)
      "no-dupe-keys": "off", // ts(1117)
      "no-func-assign": "off", // ts(2539)
      "no-import-assign": "off", // ts(2539) & ts(2540)
      "no-new-symbol": "off", // ts(7009)
      "no-obj-calls": "off", // ts(2349)
      "no-redeclare": "off", // ts(2451)
      "no-setter-return": "off", // ts(2408)
      "no-this-before-super": "off", // ts(2376)
      "no-undef": "off", // ts(2304)
      "no-unreachable": "off", // ts(7027)
      "no-unsafe-negation": "off", // ts(2365) & ts(2360) & ts(2358)
      "no-var": "warn", // ts transpile let/const to var, so no need for vars any more
      "prefer-const": "warn", // ts provides better types with const
      "prefer-rest-params": "warn", // ts provides better types with rest args over arguments
      "prefer-spread": "warn", // ts transpile spread to apply, so no need for manual apply
      "valid-typeof": "off", // ts(2367)
    },
  },
  // typescript eslint rules
  {
    files: ["**/*.ts", "**/*.vue"],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        extraFileExtensions: [".vue"],
        project: ["./tsconfig.json", "./.nuxt/tsconfig.json"],
      },
    },
    plugins: {
      "@typescript-eslint": tsEslint,
    },
    rules: {
      "@typescript-eslint/adjacent-overload-signatures": "warn",
      "@typescript-eslint/array-type": [
        "warn",
        { default: "array", readonly: "array" },
      ],
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/ban-ts-comment": "warn",
      "@typescript-eslint/ban-types": "warn",
      "@typescript-eslint/class-literal-property-style": "warn",
      "@typescript-eslint/class-methods-use-this": "warn",
      "@typescript-eslint/consistent-generic-constructors": [
        "warn",
        "constructor",
      ],
      "@typescript-eslint/consistent-indexed-object-style": ["warn", "record"],
      "@typescript-eslint/consistent-type-assertions": [
        "warn",
        {
          assertionStyle: "as",
          objectLiteralTypeAssertions: "allow-as-parameter",
        },
      ],
      "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
      "@typescript-eslint/default-param-last": "warn",
      "@typescript-eslint/dot-notation": "warn",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/explicit-member-accessibility": "warn",
      "@typescript-eslint/explicit-module-boundary-types": "warn",
      "@typescript-eslint/init-declarations": "warn",
      "@typescript-eslint/max-params": ["warn", { max: 3 }],
      "@typescript-eslint/member-ordering": "warn",
      "@typescript-eslint/method-signature-style": ["warn", "property"],
      "@typescript-eslint/no-array-constructor": "warn",
      "@typescript-eslint/no-base-to-string": "warn",
      "@typescript-eslint/no-confusing-non-null-assertion": "warn",
      "@typescript-eslint/no-confusing-void-expression": "off",
      "@typescript-eslint/no-duplicate-enum-values": "warn",
      "@typescript-eslint/no-duplicate-type-constituents": "warn",
      "@typescript-eslint/no-dynamic-delete": "warn",
      "@typescript-eslint/no-empty-function": "warn",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-extra-non-null-assertion": "warn",
      "@typescript-eslint/no-extraneous-class": "warn",
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-for-in-array": "warn",
      "@typescript-eslint/no-implied-eval": "warn",
      "@typescript-eslint/no-import-type-side-effects": "warn",
      "@typescript-eslint/no-inferrable-types": "warn",
      "@typescript-eslint/no-invalid-void-type": "warn",
      "@typescript-eslint/no-loop-func": "warn",
      "@typescript-eslint/no-loss-of-precision": "warn",
      "@typescript-eslint/no-magic-numbers": "warn",
      "@typescript-eslint/no-meaningless-void-operator": "warn",
      "@typescript-eslint/no-misused-new": "warn",
      "@typescript-eslint/no-misused-promises": "warn",
      "@typescript-eslint/no-mixed-enums": "warn",
      "@typescript-eslint/no-namespace": "warn",
      "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
      "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
      "@typescript-eslint/no-non-null-assertion": "warn",
      "@typescript-eslint/no-redundant-type-constituents": "warn",
      "@typescript-eslint/no-require-imports": "warn",
      "@typescript-eslint/no-shadow": "warn",
      "@typescript-eslint/no-throw-literal": "warn",
      "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
      "@typescript-eslint/no-unnecessary-condition": "warn",
      "@typescript-eslint/no-unnecessary-qualifier": "warn",
      "@typescript-eslint/no-unnecessary-type-arguments": "warn",
      "@typescript-eslint/no-unnecessary-type-assertion": "warn",
      "@typescript-eslint/no-unnecessary-type-constraint": "warn",
      "@typescript-eslint/no-unsafe-argument": "warn",
      "@typescript-eslint/no-unsafe-assignment": "warn",
      "@typescript-eslint/no-unsafe-declaration-merging": "warn",
      "@typescript-eslint/no-unsafe-enum-comparison": "warn",
      "@typescript-eslint/no-unsafe-member-access": "warn",
      "@typescript-eslint/no-unsafe-return": "warn",
      "@typescript-eslint/no-unsafe-unary-minus": "warn",
      "@typescript-eslint/no-unused-expressions": "warn",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/no-use-before-define": "warn",
      "@typescript-eslint/no-useless-constructor": "warn",
      "@typescript-eslint/no-useless-empty-export": "warn",
      "@typescript-eslint/no-var-requires": "warn",
      "@typescript-eslint/non-nullable-type-assertion-style": "warn",
      "@typescript-eslint/parameter-properties": "warn",
      "@typescript-eslint/prefer-as-const": "warn",
      "@typescript-eslint/prefer-destructuring": "warn",
      "@typescript-eslint/prefer-enum-initializers": "warn",
      "@typescript-eslint/prefer-for-of": "warn",
      "@typescript-eslint/prefer-function-type": "warn",
      "@typescript-eslint/prefer-includes": "warn",
      "@typescript-eslint/prefer-literal-enum-member": "warn",
      "@typescript-eslint/prefer-namespace-keyword": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "@typescript-eslint/prefer-readonly": "warn",
      "@typescript-eslint/prefer-reduce-type-parameter": "warn",
      "@typescript-eslint/prefer-regexp-exec": "warn",
      "@typescript-eslint/prefer-return-this-type": "warn",
      "@typescript-eslint/prefer-string-starts-ends-with": "warn",
      "@typescript-eslint/prefer-ts-expect-error": "warn",
      "@typescript-eslint/promise-function-async": "warn",
      "@typescript-eslint/require-array-sort-compare": "warn",
      "@typescript-eslint/require-await": "warn",
      "@typescript-eslint/restrict-plus-operands": "warn",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/return-await": "warn",
      "@typescript-eslint/sort-type-constituents": "warn",
      "@typescript-eslint/strict-boolean-expressions": "warn",
      "@typescript-eslint/switch-exhaustiveness-check": "warn",
      "@typescript-eslint/triple-slash-reference": "warn",
      "@typescript-eslint/typedef": "warn",
      "@typescript-eslint/unbound-method": "warn",
      "@typescript-eslint/unified-signatures": "warn",
    },
  },
  // vue eslint rules
  {
    files: ["**/*.vue"],
    languageOptions: {
      ecmaVersion: 2020,
      parser: vueParser,
      parserOptions: {
        parser: tsParser,
        sourceType: "module",
      },
      sourceType: "module",
    },
    plugins: { vue },
    rules: {
      "vue/component-api-style": ["warn"],
      "vue/component-name-in-template-casing": ["warn", "kebab-case"],
      "vue/component-options-name-casing": ["warn", "kebab-case"],
      "vue/custom-event-name-casing": ["warn", "kebab-case"],
      "vue/define-emits-declaration": ["warn", "type-based"],
      "vue/define-props-declaration": ["warn", "type-based"],
      "vue/multi-word-component-names": ["warn"],
      "vue/no-arrow-functions-in-watch": ["warn"],
      "vue/no-async-in-computed-properties": ["warn"],
      "vue/no-child-content": ["warn"],
      "vue/no-computed-properties-in-data": ["warn"],
      "vue/no-deprecated-data-object-declaration": ["warn"],
      "vue/no-deprecated-destroyed-lifecycle": ["warn"],
      "vue/no-deprecated-dollar-listeners-api": ["warn"],
      "vue/no-deprecated-dollar-scopedslots-api": ["warn"],
      "vue/no-deprecated-events-api": ["warn"],
      "vue/no-deprecated-filter": ["warn"],
      "vue/no-deprecated-functional-template": ["warn"],
      "vue/no-deprecated-html-element-is": ["warn"],
      "vue/no-deprecated-inline-template": ["warn"],
      "vue/no-deprecated-props-default-this": ["warn"],
      "vue/no-deprecated-router-link-tag-prop": ["warn"],
      "vue/no-deprecated-scope-attribute": ["warn"],
      "vue/no-deprecated-slot-attribute": ["warn"],
      "vue/no-deprecated-slot-scope-attribute": ["warn"],
      "vue/no-deprecated-v-bind-sync": ["warn"],
      "vue/no-deprecated-v-is": ["warn"],
      "vue/no-deprecated-v-on-native-modifier": ["warn"],
      "vue/no-deprecated-v-on-number-modifiers": ["warn"],
      "vue/no-deprecated-vue-config-keycodes": ["warn"],
      "vue/no-dupe-keys": ["warn"],
      "vue/no-dupe-keys": ["warn"],
      "vue/no-dupe-v-else-if": ["warn"],
      "vue/no-duplicate-attributes": ["warn"],
      "vue/no-export-in-script-setup": ["warn"],
      "vue/no-expose-after-await": ["warn"],
      "vue/no-lifecycle-after-await": ["warn"],
      "vue/no-mutating-props": ["warn"],
      "vue/no-parsing-error": ["warn"],
      "vue/no-ref-as-operand": ["warn"],
      "vue/no-required-prop-with-default": ["warn", { autofix: false }],
      "vue/no-reserved-component-names": ["warn"],
      "vue/no-reserved-keys": ["warn"],
      "vue/no-reserved-props": ["warn"],
      "vue/no-shared-component-data": ["warn"],
      "vue/no-side-effects-in-computed-properties": ["warn"],
      "vue/no-template-key": ["warn"],
      "vue/no-textarea-mustache": ["warn"],
      "vue/no-unused-components": ["warn"],
      "vue/no-unused-vars": ["warn"],
      "vue/no-use-computed-property-like-method": ["warn"],
      "vue/no-use-v-if-with-v-for": ["warn"],
      "vue/no-useless-template-attributes": ["warn"],
      "vue/no-v-for-template-key-on-child": ["warn"],
      "vue/no-v-text-v-html-on-component": ["warn"],
      "vue/no-watch-after-await": ["warn"],
      "vue/prefer-import-from-vue": ["warn"],
      "vue/require-component-is": ["warn"],
      "vue/require-component-is": ["warn"],
      "vue/require-prop-type-constructor": ["warn"],
      "vue/require-render-return": ["warn"],
      "vue/require-slots-as-functions": ["warn"],
      "vue/require-toggle-inside-transition": ["warn"],
      "vue/require-v-for-key": ["warn"],
      "vue/require-valid-default-prop": ["warn"],
      "vue/return-in-computed-property": ["warn"],
      "vue/return-in-emits-validator": ["warn"],
      "vue/script-indent": ["warn", 2, { baseIndent: 1 }],
      "vue/use-v-on-exact": ["warn"],
      "vue/valid-attribute-name": ["warn"],
      "vue/valid-define-emits": ["warn"],
      "vue/valid-define-props": ["warn"],
      "vue/valid-next-tick": ["warn"],
      "vue/valid-template-root": ["warn"],
      "vue/valid-v-bind": ["warn"],
      "vue/valid-v-cloak": ["warn"],
      "vue/valid-v-else": ["warn"],
      "vue/valid-v-else-if": ["warn"],
      "vue/valid-v-for": ["warn"],
      "vue/valid-v-html": ["warn"],
      "vue/valid-v-if": ["warn"],
      "vue/valid-v-is": ["warn"],
      "vue/valid-v-memo": ["warn"],
      "vue/valid-v-model": ["warn"],
      "vue/valid-v-on": ["warn"],
      "vue/valid-v-once": ["warn"],
      "vue/valid-v-pre": ["warn"],
      "vue/valid-v-show": ["warn"],
      "vue/valid-v-slot": ["warn"],
      "vue/valid-v-text": ["warn"],
    },
  },
  // vue component rules
  {
    files: ["./components/**/*.vue"],
    rules: {
      "vue/multi-word-component-names": "warn",
    },
  },
  // global rules
  {
    files: ["**/*"],
    plugins: {
      "array-func": arrayFuncPlugin,
      "eslint-comments": eslintCommentsPlugin,
      import: importPlugin,
      "no-secrets": noSecretsPlugin,
      "only-warn": onlyWarnPlugin,
      perfectionist: perfectionistPlugin,
      promise: promisePlugin,
      regexp: regexpPlugin,
      unicorn: unicornPlugin,
      "write-good-comments": writeGoodCommentsPlugin,
    },
    rules: {
      "array-func/avoid-reverse": "off",
      "array-func/from-map": "warn",
      "array-func/no-unnecessary-this-arg": "off",
      "array-func/prefer-array-from": "warn",
      "array-func/prefer-flat": "warn",
      "array-func/prefer-flat-map": "warn",
      "eslint-comments/disable-enable-pair": ["warn", { allowWholeFile: true }],
      "eslint-comments/no-aggregating-enable": ["warn"],
      "eslint-comments/no-duplicate-disable": ["warn"],
      "eslint-comments/no-unlimited-disable": ["warn"],
      "eslint-comments/no-unused-disable": ["warn"],
      "eslint-comments/no-unused-enable": ["warn"],
      "eslint-comments/require-description": ["warn"],
      "import/default": "warn",
      "import/export": "warn",
      "import/first": "warn",
      "import/newline-after-import": "warn",
      "import/no-absolute-path": "warn",
      "import/no-cycle": "warn",
      "import/no-deprecated": "warn",
      "import/no-duplicates": "warn",
      "import/no-empty-named-blocks": "warn",
      "import/no-extraneous-dependencies": "warn",
      "import/no-self-import": "warn",
      "import/no-unused-modules": "warn",
      "import/order": "warn",
      "no-secrets/no-secrets": "warn",
      "perfectionist/sort-array-includes": "warn",
      "perfectionist/sort-astro-attributes": "warn",
      "perfectionist/sort-classes": "warn",
      "perfectionist/sort-enums": "warn",
      "perfectionist/sort-exports": "warn",
      "perfectionist/sort-imports": "off", // keep disable to not conflict with import-helpers/order-imports
      "perfectionist/sort-interfaces": "warn",
      "perfectionist/sort-jsx-props": "warn",
      "perfectionist/sort-maps": "warn",
      "perfectionist/sort-named-exports": "warn",
      "perfectionist/sort-named-imports": "warn",
      "perfectionist/sort-object-types": "warn",
      "perfectionist/sort-objects": "warn",
      "perfectionist/sort-union-types": "warn",
      "promise/always-return": "warn",
      "promise/catch-or-return": "warn",
      "promise/no-callback-in-promise": "warn",
      "promise/no-multiple-resolved": "warn",
      "promise/no-nesting": "warn",
      "promise/no-new-statics": "warn",
      "promise/no-promise-in-callback": "warn",
      "promise/no-return-in-finally": "warn",
      "promise/no-return-wrap": "warn",
      "promise/param-names": "warn",
      "promise/prefer-await-to-then": "warn",
      "regexp/confusing-quantifier": "warn",
      "regexp/control-character-escape": "warn",
      "regexp/negation": "warn",
      "regexp/no-contradiction-with-assertion": "warn",
      "regexp/no-dupe-characters-character-class": "warn",
      "regexp/no-empty-alternative": "warn",
      "regexp/no-empty-capturing-group": "warn",
      "regexp/no-empty-character-class": "warn",
      "regexp/no-empty-group": "warn",
      "regexp/no-empty-lookarounds-assertion": "warn",
      "regexp/no-empty-string-literal": "warn",
      "regexp/no-escape-backspace": "warn",
      "regexp/no-extra-lookaround-assertions": "warn",
      "regexp/no-invalid-regexp": "warn",
      "regexp/no-invisible-character": "warn",
      "regexp/no-lazy-ends": "warn",
      "regexp/no-legacy-features": "warn",
      "regexp/no-misleading-capturing-group": "warn",
      "regexp/no-misleading-unicode-character": "warn",
      "regexp/no-missing-g-flag": "warn",
      "regexp/no-non-standard-flag": "warn",
      "regexp/no-obscure-range": "warn",
      "regexp/no-optional-assertion": "warn",
      "regexp/no-potentially-useless-backreference": "warn",
      "regexp/no-super-linear-backtracking": "warn",
      "regexp/no-useless-assertions": "warn",
      "regexp/no-useless-backreference": "warn",
      "regexp/no-useless-dollar-replacements": "warn",
      "unicorn/better-regex": "warn",
      "unicorn/catch-error-name": "warn",
      "unicorn/consistent-destructuring": "warn",
      "unicorn/consistent-function-scoping": "warn",
      "unicorn/escape-case": "warn",
      "unicorn/expiring-todo-comments": "warn",
      "unicorn/explicit-length-check": "warn",
      "unicorn/new-for-builtins": "warn",
      "unicorn/no-abusive-eslint-disable": "warn",
      "unicorn/no-array-callback-reference": "warn",
      "unicorn/no-array-for-each": "warn",
      "unicorn/no-array-method-this-argument": "warn",
      "unicorn/no-array-push-push": "warn",
      "unicorn/no-await-expression-member": "warn",
      "unicorn/no-console-spaces": "warn",
      "unicorn/no-document-cookie": "warn",
      "unicorn/no-empty-file": "warn",
      "unicorn/no-for-loop": "warn",
      "unicorn/no-instanceof-array": "warn",
      "unicorn/no-invalid-remove-event-listener": "warn",
      "unicorn/no-lonely-if": "warn",
      "unicorn/no-negated-condition": "warn",
      "unicorn/no-nested-ternary": "warn",
      "unicorn/no-new-array": "warn",
      "unicorn/no-new-buffer": "warn",
      "unicorn/no-static-only-class": "warn",
      "unicorn/no-this-assignment": "warn",
      "unicorn/no-unnecessary-await": "warn",
      "unicorn/no-unnecessary-polyfills": "warn",
      "unicorn/no-unreadable-array-destructuring": "warn",
      "unicorn/no-unreadable-iife": "warn",
      "unicorn/no-unused-properties": "warn",
      "unicorn/no-useless-fallback-in-spread": "warn",
      "unicorn/no-useless-length-check": "warn",
      "unicorn/no-useless-promise-resolve-reject": "warn",
      "unicorn/no-useless-spread": "warn",
      "unicorn/no-useless-switch-case": "warn",
      "unicorn/no-useless-undefined": "warn",
      "unicorn/no-zero-fractions": "warn",
      "unicorn/number-literal-case": "warn",
      "unicorn/numeric-separators-style": "warn",
      "unicorn/prefer-add-event-listener": "warn",
      "unicorn/prefer-array-find": "warn",
      "unicorn/prefer-array-index-of": "warn",
      "unicorn/prefer-array-some": "warn",
      "unicorn/prefer-at": "warn",
      "unicorn/prefer-blob-reading-methods": "warn",
      "unicorn/prefer-code-point": "warn",
      "unicorn/prefer-date-now": "warn",
      "unicorn/prefer-default-parameters": "warn",
      "unicorn/prefer-dom-node-append": "warn",
      "unicorn/prefer-dom-node-dataset": "warn",
      "unicorn/prefer-dom-node-remove": "warn",
      "unicorn/prefer-dom-node-text-content": "warn",
      "unicorn/prefer-event-target": "warn",
      "unicorn/prefer-export-from": "warn",
      "unicorn/prefer-includes": "warn",
      "unicorn/prefer-json-parse-buffer": "warn",
      "unicorn/prefer-keyboard-event-key": "warn",
      "unicorn/prefer-logical-operator-over-ternary": "warn",
      "unicorn/prefer-modern-dom-apis": "warn",
      "unicorn/prefer-modern-math-apis": "warn",
      "unicorn/prefer-native-coercion-functions": "warn",
      "unicorn/prefer-negative-index": "warn",
      "unicorn/prefer-node-protocol": "warn",
      "unicorn/prefer-number-properties": "warn",
      "unicorn/prefer-object-from-entries": "warn",
      "unicorn/prefer-optional-catch-binding": "warn",
      "unicorn/prefer-prototype-methods": "warn",
      "unicorn/prefer-query-selector": "warn",
      "unicorn/prefer-reflect-apply": "warn",
      "unicorn/prefer-regexp-test": "warn",
      "unicorn/prefer-set-has": "warn",
      "unicorn/prefer-set-size": "warn",
      "unicorn/prefer-string-replace-all": "warn",
      "unicorn/prefer-string-slice": "warn",
      "unicorn/prefer-string-starts-ends-with": "warn",
      "unicorn/prefer-string-trim-start-end": "warn",
      "unicorn/prefer-switch": "warn",
      "unicorn/relative-url-style": "warn",
      "unicorn/require-array-join-separator": "warn",
      "unicorn/require-number-to-fixed-digits-argument": "warn",
      "unicorn/require-post-message-target-origin": "warn",
      "unicorn/switch-case-braces": "warn",
      "unicorn/template-indent": "warn",
      "unicorn/throw-new-error": "warn",
      "write-good-comments/write-good-comments": "warn",
    },
    settings: {
      "import/ignore": ["vue"],
      "import/resolver": {
        node: {
          extensions: [".js", ".jsx", ".ts", ".tsx"],
        },
      },
    },
  },
  {
    files: [
      "**/pages/**/*.{js,ts,jsx,tsx,vue}",
      "**/layouts/**/*.{js,ts,jsx,tsx,vue}",
      "**/app.{js,ts,jsx,tsx,vue}",
      "**/error.{js,ts,jsx,tsx,vue}",
      "**/components/*/**/*.{js,ts,jsx,tsx,vue}",
    ],
    rules: { "vue/multi-word-component-names": "off" },
  },
  {
    files: [
      "**/pages/**/*.{js,ts,jsx,tsx,vue}",
      "**/layouts/**/*.{js,ts,jsx,tsx,vue}",
    ],
    rules: { "vue/no-multiple-template-root": "error" },
  },
  // this is eslint rules for config files
  {
    files: [
      "eslint.config.js",
      "commitlint.config.ts",
      "nuxt.config.js",
      "tailwind.config.ts",
      "vue-shim.d.ts",
    ],
    rules: {
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-magic-numbers": "off",
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-var-requires": "off",
    },
  },
  eslintConfigPrettier,
]);
